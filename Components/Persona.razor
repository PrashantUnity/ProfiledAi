@using ProfiledAi.Models
@using ProfiledAi.Utils
<div class="@($"chat-item {Model.IsActive}")" @onclick="HideSidebarMobile">
    <div class="chat-avatar">@Model.Avatar</div>
    <div class="chat-info">
        <div class="d-flex justify-content-between">
            <h6>@Model.Name</h6>
            <span class="chat-time">@Model.Time</span>
        </div>
        <div class="chat-preview d-flex">
            <span>@Model.LastMessage</span>
            @if (Model.UnreadCount > 0)
            {
                <span class="unread-count">@Model.UnreadCount</span>    
            }
        </div>
    </div>
</div>

@code{
    [Parameter, EditorRequired] public PersonaModel Model { get; set; } = null!;
    [Parameter] public EventCallback<PersonaModel> UpdateActiveNess { get; set; } 
    

    private async Task HideSidebarMobile()
    {
        Model.IsActive = Constant.Active;
        await UpdateActiveNess.InvokeAsync(Model);
    }
}